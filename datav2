

DataAnalytics — ТЗ v5 (Часть 1/3)

0) Базовые соглашения
	•	Валюта: UAH (гривна). Денежные поля — numeric/decimal; форматирование на фронте.
	•	Часовой пояс: серверный; все агрегаты — дневные.
	•	Деление на ноль → NULL → на UI показываем «—».
	•	Платформы: google, meta, email. По умолчанию: google,meta.
	•	Только подтверждённые источники:
	•	dashboards.v5_bi_platform_daily — KPI/тренды/доли.
	•	dashboards.v5_leads_campaign_daily (матвью) — агрегаты кампаний.
	•	dashboards.v5_leads_source_daily_vw — UTM-источники (по дизайну spend=0).
	•	dashboards.v5_leads_campaign_weekly — WoW.
	•	dashboards.v5_campaign_anomalies — аномалии (используем в Ч.2).
	•	CRM/склейка: dashboards.fact_leads, dashboards.crm_requests, dashboards.crm_marketing_link.
	•	Референсы объявлений: dashboards.google_ad_reference, dashboards.fb_ad_reference, dashboards.campaign_reference.
	•	Контракты (точный источник для Google): dashboards.v6_google_contracts_detail (подтверждён и создан как VIEW).

⸻

1) Глобальные фильтры (шапка, sticky)

Параметр	Тип	Обяз.	По умолчанию	Описание
date_from / date_to	date	✓	—	рамка данных (вкл. границы)
platforms	text[]	—	['google','meta']	применимо везде, где указано
min_spend	numeric	—	0	фильтр для таблиц кампаний
compare_mode	enum('auto','custom','disabled')	—	auto	управление сравнением периодов
prev_from / prev_to	date	—	—	актуально при compare_mode='custom'
(детал.) search	text	—	—	быстрый поиск на деталках
(детал.) campaign_ids	text[]	—	—	ограничение по кампаниям
(детал.) paid	enum('all','paid','organic')	—	all	для страниц с fact_leads

Правила сравнения:
	•	auto: прошлый период = та же длина, вплотную до date_from - 1.
	•	custom: фронт передаёт prev_from/prev_to. Бек не принуждает длины; если разные — возвращает как есть (UI помечает).
	•	disabled: возвращаем только «current» без «previous».

⸻

2) KPI: текущий vs предыдущий (PoP)

Источник: dashboards.v5_bi_platform_daily

Endpoint

GET /v5/kpi/compare
  ?date_from=YYYY-MM-DD&date_to=YYYY-MM-DD
  &platforms=google,meta
  &compare_mode=auto|custom|disabled
  [&prev_from=YYYY-MM-DD&prev_to=YYYY-MM-DD]

Метрики: leads, n_contracts, revenue (sum_contracts), spend, CPL, ROAS.

SQL (универсальная заготовка PoP):

WITH bounds AS (
  SELECT %(date_from)s::date AS df, %(date_to)s::date AS dt
),
win AS ( SELECT df, dt, (dt - df + 1) AS days FROM bounds ),
cur AS (
  SELECT SUM(leads) leads, SUM(n_contracts) n_contracts,
         SUM(sum_contracts) revenue, SUM(spend) spend
  FROM dashboards.v5_bi_platform_daily d
  WHERE d.dt BETWEEN (SELECT df FROM bounds) AND (SELECT dt FROM bounds)
    AND (%(platforms)s IS NULL OR d.platform = ANY(%(platforms)s))
),
prev AS (
  SELECT SUM(leads) leads, SUM(n_contracts) n_contracts,
         SUM(sum_contracts) revenue, SUM(spend) spend
  FROM dashboards.v5_bi_platform_daily d
  WHERE d.dt BETWEEN
        COALESCE(%(prev_from)s::date, (SELECT df - days FROM win))
    AND COALESCE(%(prev_to)s::date,   (SELECT df - 1    FROM win))
    AND (%(platforms)s IS NULL OR d.platform = ANY(%(platforms)s))
)
SELECT
  cur.leads      AS leads_cur,
  prev.leads     AS leads_prev,
  (cur.leads - prev.leads) AS leads_diff,
  CASE WHEN prev.leads>0 THEN (cur.leads - prev.leads)::numeric*100/prev.leads END AS leads_diff_pct,

  cur.n_contracts AS n_contracts_cur,
  prev.n_contracts AS n_contracts_prev,

  cur.revenue AS revenue_cur,
  prev.revenue AS revenue_prev,
  (cur.revenue - prev.revenue) AS revenue_diff,
  CASE WHEN prev.revenue>0 THEN (cur.revenue - prev.revenue)::numeric*100/prev.revenue END AS revenue_diff_pct,

  cur.spend AS spend_cur,
  prev.spend AS spend_prev,
  (cur.spend - prev.spend) AS spend_diff,
  CASE WHEN prev.spend>0 THEN (cur.spend - prev.spend)::numeric*100/prev.spend END AS spend_diff_pct,

  CASE WHEN cur.leads>0  THEN cur.spend::numeric/NULLIF(cur.leads,0) END AS cpl_cur,
  CASE WHEN prev.leads>0 THEN prev.spend::numeric/NULLIF(prev.leads,0) END AS cpl_prev,

  CASE WHEN cur.spend>0  THEN cur.revenue::numeric/NULLIF(cur.spend,0) END AS roas_cur,
  CASE WHEN prev.spend>0 THEN prev.revenue::numeric/NULLIF(prev.spend,0) END AS roas_prev;

Пример ответа

{
  "leads_cur":418,"leads_prev":244,"leads_diff":174,"leads_diff_pct":71.31,
  "n_contracts_cur":3,"n_contracts_prev":2,
  "revenue_cur":244440.00,"revenue_prev":32340.88,"revenue_diff":212099.12,"revenue_diff_pct":655.75,
  "spend_cur":32340.88,"spend_prev":?,"spend_diff":?,"spend_diff_pct":?,
  "cpl_cur":77.37,"cpl_prev":?,"roas_cur":7.56,"roas_prev":?
}

UI (блок KPI 6×2):
	•	Ряд 1: Leads / Contracts / Revenue / Spend / CPL / ROAS (текущее значение).
	•	Ряд 2: Δ и %Δ к прошлому периоду, цвет: зел/красн (по знаку улучшения; для CPL — обратный).
	•	Доп. индикаторы: маленькие стрелки ↑/↓; тултип с абсолютом и процентом.

⸻

3) Тренды с оверлеем предыдущего периода

Источник: dashboards.v5_bi_platform_daily

Endpoints

GET /v5/trend/leads/compare
GET /v5/trend/spend/compare
  ?date_from=...&date_to=...&platforms=...&compare_mode=auto|custom[&prev_from=...&prev_to=...]

SQL (для leads; для spend заменить поле):

WITH bounds AS ( SELECT %(date_from)s::date df, %(date_to)s::date dt ),
win AS ( SELECT df, dt, (dt - df + 1) AS days FROM bounds ),
cur AS (
  SELECT d.dt, SUM(d.leads) AS val
  FROM dashboards.v5_bi_platform_daily d
  WHERE d.dt BETWEEN (SELECT df FROM bounds) AND (SELECT dt FROM bounds)
    AND (%(platforms)s IS NULL OR d.platform = ANY(%(platforms)s))
  GROUP BY d.dt
),
prev AS (
  SELECT d.dt + (SELECT days FROM win) AS dt_align, SUM(d.leads) AS val
  FROM dashboards.v5_bi_platform_daily d
  WHERE d.dt BETWEEN
        COALESCE(%(prev_from)s::date, (SELECT df - days FROM win))
    AND COALESCE(%(prev_to)s::date,   (SELECT df - 1    FROM win))
    AND (%(platforms)s IS NULL OR d.platform = ANY(%(platforms)s))
  GROUP BY 1
)
SELECT calendar.dt,
       COALESCE(c.val,0) AS leads_cur,
       COALESCE(p.val,0) AS leads_prev_shifted
FROM (SELECT generate_series((SELECT df FROM bounds),(SELECT dt FROM bounds),'1 day')::date AS dt) calendar
LEFT JOIN cur  c ON c.dt = calendar.dt
LEFT JOIN prev p ON p.dt_align = calendar.dt
ORDER BY calendar.dt;

UI (2 линейных):
	•	Ось X — дни текущего периода. Линия 1 — «текущий период», Линия 2 — «прошлый (сдвинут)».
	•	Тултип: Дата, Leads_cur, Leads_prev_shifted, Δ.
	•	Нули (дни без данных) — заполняем нулями (zero-fill).

⸻

4) Доли (share) по платформам с Δ п.п.

Источник: dashboards.v5_bi_platform_daily
Метрика: по умолчанию leads, опционально revenue.

Endpoint

GET /v5/share/platforms/compare
  ?date_from=...&date_to=...&metric=leads|revenue

SQL (пример для leads):

WITH bounds AS ( SELECT %(date_from)s::date df, %(date_to)s::date dt ),
win AS ( SELECT df, dt, (dt - df + 1) days FROM bounds ),
cur AS (
  SELECT platform, SUM(leads) AS leads
  FROM dashboards.v5_bi_platform_daily
  WHERE dt BETWEEN (SELECT df FROM bounds) AND (SELECT dt FROM bounds)
  GROUP BY platform
),
prev AS (
  SELECT platform, SUM(leads) AS leads
  FROM dashboards.v5_bi_platform_daily
  WHERE dt BETWEEN
        COALESCE(%(prev_from)s::date,(SELECT df - days FROM win))
    AND COALESCE(%(prev_to)s::date,(SELECT df - 1 FROM win))
  GROUP BY platform
),
tot AS (
  SELECT (SELECT SUM(leads) FROM cur)  cur_total,
         (SELECT SUM(leads) FROM prev) prev_total
)
SELECT p AS platform,
       cur_leads,
       prev_leads,
       CASE WHEN cur_total>0  THEN cur_leads::numeric*100/cur_total  END AS share_cur_pct,
       CASE WHEN prev_total>0 THEN prev_leads::numeric*100/prev_total END AS share_prev_pct,
       CASE WHEN cur_total>0 AND prev_total>0
            THEN (cur_leads::numeric*100/cur_total) - (prev_leads::numeric*100/prev_total)
       END AS share_diff_pp
FROM (
  SELECT COALESCE(c.platform, p.platform) p,
         COALESCE(c.leads,0) cur_leads,
         COALESCE(p.leads,0) prev_leads
  FROM cur c FULL JOIN prev p USING(platform)
), tot;

UI:
	•	Donut «Share Cur %» и таблица: Platform | Cur% | Prev% | Δ p.p. | Leads cur/prev.
	•	Цвета — фиксированные по платформам (Google/Meta/Email).
	•	Клик по сегменту → фильтр платформ в глобальной шапке.

⸻

5) UTM-источники (агрегат)

Источник: dashboards.v5_leads_source_daily_vw
Важно: spend = 0 по дизайн-решению (подтверждено).

Endpoint

GET /v5/utm-sources
  ?date_from=...&date_to=...
  [&platforms=google,meta,email]
  [&limit=1000]

SQL (базовая):

SELECT
  platform,
  utm_source,
  SUM(leads)         AS leads,
  SUM(n_contracts)   AS n_contracts,
  SUM(sum_contracts) AS revenue,
  SUM(spend)         AS spend  -- ожидаемо 0
FROM dashboards.v5_leads_source_daily_vw
WHERE dt BETWEEN %(date_from)s::date AND %(date_to)s::date
  AND (%(platforms)s IS NULL OR platform = ANY(%(platforms)s))
GROUP BY platform, utm_source
ORDER BY leads DESC
LIMIT COALESCE(%(limit)s, 1000);

UI:
	•	Таблица с быстрым поиском по utm_source.
	•	Значения ':', (unknown) → показываем как «—».
	•	Столбцы: Platform | utm_source | Leads | Contracts | Revenue | Spend(=0).

⸻

6) WoW (неделя к неделе) по кампаниям

Источник: dashboards.v5_leads_campaign_weekly (готовый view).

Endpoint

GET /v5/campaigns/wow?platforms=google,meta&limit=200

SQL (как есть из view):

SELECT *
FROM dashboards.v5_leads_campaign_weekly
WHERE (%(platforms)s IS NULL OR platform = ANY(%(platforms)s))
ORDER BY leads_diff DESC
LIMIT COALESCE(%(limit)s, 200);

UI:
	•	Таблица с подсветкой: leads_diff, leads_diff_pct, spend_diff, spend_diff_pct, cpl_cur/prev.
	•	Сортировки: leads_diff DESC (по умолчанию), spend_diff, cpl_cur.
	•	Бейджи тренда ↑/↓ рядом с ключевыми метриками.

⸻

7) Примеры вызовов (для блоков Ч.1)

KPI (auto-compare)

/v5/kpi/compare?date_from=2025-09-10&date_to=2025-10-03&platforms=google,meta

Trend Leads (overlay)

/v5/trend/leads/compare?date_from=2025-09-10&date_to=2025-10-03&platforms=google,meta

Share Platforms (Δ p.п.)

/v5/share/platforms/compare?date_from=2025-09-10&date_to=2025-10-03&metric=leads

UTM Sources

/v5/utm-sources?date_from=2025-09-10&date_to=2025-10-03&platforms=google,meta,email&limit=1000

WoW

/v5/campaigns/wow?platforms=google,meta&limit=100


⸻

8) UI — бенто-секции (Часть 1)
	1.	Шапка фильтров (sticky)
	•	Период (DateRange), Платформы (MultiSelect), min_spend (Number), compare_mode (Segmented: Auto/Custom/Off).
	•	Если Custom — доп. поле «Previous Period».
	2.	KPI Compare (6×2)
	•	Верх: значение Cur; низ: Δ / %Δ.
	•	Индикаторы: стрелки, цветный фон бейджа (зел/красн).
	•	Мини-спарклайн (cur-период) на фоне карточки — опционально.
	3.	Trends Overlay
	•	Две линии, легенда «Текущий / Прошлый».
	•	Тултип: дата, cur, prev, Δ.
	4.	Share Platforms
	•	Donut + таблица; клик по сегменту = toggle платформы в шапке.
	•	Переключатель метрики: Leads/Revenue.
	5.	UTM Sources (Топ-источники)
	•	Таблица, быстрый поиск; пустые/«:» → «—».
	6.	WoW
	•	Таблица «Неделя к неделе» с подсветкой приростов.
	•	Клик по строке → Дрилдаун кампании (будет в Ч.3).


ниже Часть 2/3 итогового ТЗ (v5) — «Кампании PoP, Муверы, Матрица эффективности, Рекомендации, Split Paid/Organic, Аномалии». После этого напиши «далее» — пришлю Часть 3/3 (дрилдауны, Google-контракты, Lead/Contract page, справочники, финальная бенто-сетка, OpenAPI, перформанс/надёжность).

⸻

DataAnalytics — ТЗ v5 (Часть 2/3)

Только подтверждённые источники:
dashboards.v5_leads_campaign_daily (агрегаты по дням),
dashboards.v5_leads_campaign_weekly (WoW),
dashboards.v5_campaign_anomalies (аномалии; схема может отличаться — возвращаем SELECT *),
dashboards.fact_leads (склейка CRM↔маркетинг — для paid/organic),
dashboards.campaign_reference (человекочитаемые названия при необходимости).

Все эндпоинты используют именованные параметры (psycopg3-style). Все деления защищены NULLIF(...) — при нуле → NULL (на UI «—»).

⸻

8) Кампании — сравнение периода (PoP + эффективность)

Источник: dashboards.v5_leads_campaign_daily.

Endpoint

GET /v5/campaigns/compare
  ?date_from=...&date_to=...
  [&platforms=google,meta]
  [&min_spend=0]
  [&compare_mode=auto|custom|disabled]
  [&prev_from=...&prev_to=...]
  [&limit=500]
  [&search=...]             -- опц., поиск по campaign_name (ILIKE)
  [&order_by=leads_diff|-roas_cur|spend_cur|cpl_cur]  -- опц.

SQL (универсально, с фильтром поиска/лимитом/минимальным спендом):

WITH bounds AS (SELECT %(date_from)s::date df, %(date_to)s::date dt),
win AS (SELECT df, dt, (dt - df + 1) AS days FROM bounds),

cur AS (
  SELECT platform, campaign_id, campaign_name,
         SUM(leads) leads_cur,
         SUM(n_contracts) n_contracts_cur,
         SUM(sum_contracts) revenue_cur,
         SUM(spend) spend_cur
  FROM dashboards.v5_leads_campaign_daily
  WHERE dt BETWEEN (SELECT df FROM bounds) AND (SELECT dt FROM bounds)
    AND (%(platforms)s IS NULL OR platform = ANY(%(platforms)s))
  GROUP BY 1,2,3
),
prev AS (
  SELECT platform, campaign_id, campaign_name,
         SUM(leads) leads_prev,
         SUM(n_contracts) n_contracts_prev,
         SUM(sum_contracts) revenue_prev,
         SUM(spend) spend_prev
  FROM dashboards.v5_leads_campaign_daily
  WHERE dt BETWEEN
        COALESCE(%(prev_from)s::date, (SELECT df - days FROM win))
    AND COALESCE(%(prev_to)s::date,   (SELECT df - 1    FROM win))
    AND (%(platforms)s IS NULL OR platform = ANY(%(platforms)s))
  GROUP BY 1,2,3
),
cmp AS (
  SELECT
    COALESCE(c.platform,p.platform)         AS platform,
    COALESCE(c.campaign_id,p.campaign_id)   AS campaign_id,
    COALESCE(c.campaign_name,p.campaign_name) AS campaign_name,

    COALESCE(c.leads_cur,0)   AS leads_cur,
    COALESCE(p.leads_prev,0)  AS leads_prev,
    (COALESCE(c.leads_cur,0) - COALESCE(p.leads_prev,0)) AS leads_diff,
    CASE WHEN COALESCE(p.leads_prev,0)>0
         THEN (COALESCE(c.leads_cur,0) - p.leads_prev)::numeric*100/p.leads_prev END AS leads_diff_pct,

    COALESCE(c.n_contracts_cur,0)  AS n_contracts_cur,
    COALESCE(p.n_contracts_prev,0) AS n_contracts_prev,

    COALESCE(c.revenue_cur,0) AS revenue_cur,
    COALESCE(p.revenue_prev,0) AS revenue_prev,

    COALESCE(c.spend_cur,0)  AS spend_cur,
    COALESCE(p.spend_prev,0) AS spend_prev,

    CASE WHEN COALESCE(c.leads_cur,0)>0
      THEN c.spend_cur::numeric/NULLIF(c.leads_cur,0) END AS cpl_cur,
    CASE WHEN COALESCE(p.leads_prev,0)>0
      THEN p.spend_prev::numeric/NULLIF(p.leads_prev,0) END AS cpl_prev,

    CASE WHEN COALESCE(c.spend_cur,0)>0
      THEN c.revenue_cur::numeric/NULLIF(c.spend_cur,0) END AS roas_cur,
    CASE WHEN COALESCE(p.spend_prev,0)>0
      THEN p.revenue_prev::numeric/NULLIF(p.spend_prev,0) END AS roas_prev
  FROM cur c
  FULL JOIN prev p USING (platform, campaign_id, campaign_name)
  WHERE COALESCE(c.spend_cur,0) >= COALESCE(%(min_spend)s::numeric,0)
     OR COALESCE(p.spend_prev,0) >= COALESCE(%(min_spend)s::numeric,0)
)
SELECT *
FROM cmp
WHERE (%(search)s IS NULL OR campaign_name ILIKE ('%' || %(search)s || '%'))
ORDER BY
  CASE WHEN %(order_by)s = 'leads_diff' THEN leads_diff END DESC NULLS LAST,
  CASE WHEN %(order_by)s = '-roas_cur'  THEN roas_cur   END ASC  NULLS LAST,
  CASE WHEN %(order_by)s = 'roas_cur'   THEN roas_cur   END DESC NULLS LAST,
  CASE WHEN %(order_by)s = 'spend_cur'  THEN spend_cur  END DESC NULLS LAST,
  CASE WHEN %(order_by)s = 'cpl_cur'    THEN cpl_cur    END ASC  NULLS LAST,
  leads_cur DESC
LIMIT COALESCE(%(limit)s, 500);

JSON (строка):

{
  "platform":"google|meta",
  "campaign_id":"string",
  "campaign_name":"string",
  "leads_cur":0,"leads_prev":0,"leads_diff":0,"leads_diff_pct":0.0,
  "n_contracts_cur":0,"n_contracts_prev":0,
  "revenue_cur":0.0,"revenue_prev":0.0,
  "spend_cur":0.0,"spend_prev":0.0,
  "cpl_cur":null,"cpl_prev":null,"roas_cur":null,"roas_prev":null
}

UI (таблица «Campaigns PoP»):
	•	Колонки: Platform • Campaign • Leads Cur/Prev/Δ/%Δ • Spend Cur/Prev • CPL Cur/Prev • ROAS Cur/Prev.
	•	Сортировки: leads_diff (по умолч.), roas_cur, spend_cur, cpl_cur.
	•	Быстрый поиск по Campaign.
	•	Метки-индикаторы: зел/красн для Δ и %Δ; для CPL — цвет логики «меньше — лучше».
	•	Клики: открывают дрилдаун кампании (часть 3).

⸻

9) «Муверы» (Winners / Watch / Losers)

Источник: результат /v5/campaigns/compare (п.8).
Идея: помочь маркетологу быстро масштабировать удачные и глушить неэффективные.

Параметры по умолчанию (оверрайд через query):
	•	target_roas = 3.0
	•	kill_roas   = 0.8
	•	target_cpl  = NULL (если не задан — не используем CPL в правилах)
	•	min_leads   = 5
	•	min_spend   = 0

Endpoint

GET /v5/campaigns/top-movers
  ?date_from=...&date_to=...&platforms=...&min_spend=0
  [&target_roas=3.0&kill_roas=0.8&target_cpl=&min_leads=5]
  [&n=10]

Алгоритм классификации (на бэке):
	•	Winners (scale): spend_cur>=min_spend AND (roas_cur>=target_roas OR (target_cpl IS NOT NULL AND cpl_cur<=target_cpl)) AND leads_cur>=min_leads AND leads_diff>=0.
	•	Losers (pause): spend_cur>=min_spend AND ((roas_cur IS NULL OR roas_cur<kill_roas) OR leads_cur=0).
	•	Watch: остальное.

Формат ответа

{
  "winners":[{ "...cmp fields...", "action":"scale" }],
  "watch":[{ "...", "action":"watch" }],
  "losers":[{ "...", "action":"pause" }]
}

UI (бенто-карточки 3 колонки):
	•	Каждая карточка — таблица с 5–8 строками: Campaign • Leads • Spend • ROAS • CPL.
	•	В шапке карточки — бейдж «Scale / Watch / Pause», подсказка «почему» (см. правила).
	•	Быстрые CTA-кнопки (неломающие фронт): «Открыть кампанию», «Показать тренд».

⸻

10) Матрица эффективности (Scatter: объём ↔ эффективность)

Dataset: из /v5/campaigns/compare (п.8).

Endpoint (агрегация + квадранты)

GET /v6/campaigns/scatter
  ?date_from=...&date_to=...&platforms=...&min_spend=0
  [&target_cpl=...] [&min_leads=...]
  [&limit=500]

SQL (подготовка точек и квадрантов):

WITH data AS (
  /* берём те же поля, что и /v5/campaigns/compare; можно сделать подзапросом */
  SELECT *
  FROM (
    /* << вставьте SELECT из п.8 без ORDER/LIMIT >> */
    SELECT * FROM (
      WITH bounds AS (SELECT %(date_from)s::date df, %(date_to)s::date dt),
      win AS (SELECT df, dt, (dt - df + 1) AS days FROM bounds),
      cur AS (
        SELECT platform, campaign_id, campaign_name,
               SUM(leads) leads_cur, SUM(n_contracts) n_contracts_cur,
               SUM(sum_contracts) revenue_cur, SUM(spend) spend_cur
        FROM dashboards.v5_leads_campaign_daily
        WHERE dt BETWEEN (SELECT df FROM bounds) AND (SELECT dt FROM bounds)
          AND (%(platforms)s IS NULL OR platform = ANY(%(platforms)s))
        GROUP BY 1,2,3
      ),
      prev AS (
        SELECT platform, campaign_id, campaign_name,
               SUM(leads) leads_prev, SUM(n_contracts) n_contracts_prev,
               SUM(sum_contracts) revenue_prev, SUM(spend) spend_prev
        FROM dashboards.v5_leads_campaign_daily
        WHERE dt BETWEEN
              COALESCE(%(prev_from)s::date, (SELECT df - days FROM win))
          AND COALESCE(%(prev_to)s::date,   (SELECT df - 1    FROM win))
          AND (%(platforms)s IS NULL OR platform = ANY(%(platforms)s))
        GROUP BY 1,2,3
      )
      SELECT
        COALESCE(c.platform,p.platform) AS platform,
        COALESCE(c.campaign_id,p.campaign_id) AS campaign_id,
        COALESCE(c.campaign_name,p.campaign_name) AS campaign_name,
        COALESCE(c.leads_cur,0) AS leads_cur,
        COALESCE(c.spend_cur,0) AS spend_cur,
        CASE WHEN COALESCE(c.leads_cur,0)>0
             THEN c.spend_cur::numeric/NULLIF(c.leads_cur,0) END AS cpl_cur,
        CASE WHEN COALESCE(c.spend_cur,0)>0
             THEN c.revenue_cur::numeric/NULLIF(c.spend_cur,0) END AS roas_cur
      FROM cur c FULL JOIN prev p USING (platform, campaign_id, campaign_name)
      WHERE COALESCE(c.spend_cur,0) >= COALESCE(%(min_spend)s::numeric,0)
    ) t
  ) cmp
),
th AS (
  SELECT
    %(target_cpl)s::numeric AS target_cpl,
    COALESCE(%(min_leads)s::int, 0) AS min_leads
)
SELECT
  d.platform, d.campaign_id, d.campaign_name,
  d.leads_cur AS y_val,
  d.cpl_cur   AS x_val,
  d.spend_cur AS size_val,
  d.roas_cur,
  CASE
    WHEN th.target_cpl IS NOT NULL AND d.cpl_cur IS NOT NULL AND d.cpl_cur <= th.target_cpl
         AND d.leads_cur >= th.min_leads THEN 'Scale'
    WHEN th.target_cpl IS NOT NULL AND d.cpl_cur IS NOT NULL AND d.cpl_cur > th.target_cpl
         AND d.leads_cur >= th.min_leads THEN 'Test'
    WHEN d.leads_cur < th.min_leads THEN 'Watch'
    ELSE 'Watch'
  END AS quadrant
FROM data d, th
ORDER BY d.spend_cur DESC
LIMIT COALESCE(%(limit)s,500);

UI (Scatter):
	•	X = CPL_cur (меньше — лучше). Y = Leads_cur (больше — лучше). Size = Spend_cur. Цвет = platform.
	•	Линии-пороги: вертикаль на target_cpl (если задан), горизонталь на min_leads.
	•	Легенда квадрантов: Scale / Test / Watch. Ховер → тултип с Campaign, Leads, Spend, CPL, ROAS.
	•	Клик по точке → открыть кампанию (таблица п.8 с фильтром) / дрилдаун.

⸻

11) Рекомендации по бюджету (rule-based)

Идея: из PoP-среза (п.8) дать next steps: scale/pause/watch + короткое объяснение.

Endpoint

GET /v6/reco/budget
  ?date_from=...&date_to=...&platforms=...&min_spend=0
  [&target_roas=3&kill_roas=0.8&target_cpl=&min_leads=5]
  [&limit=200]

SQL-каркас (на базе cmp из п.8):

WITH cmp AS (
  /* Вставьте сюда SELECT из п.8 (без ORDER/LIMIT/SEARCH), поле-набор из cmp */
  SELECT * FROM (... из п.8 ...) t
)
SELECT
  platform, campaign_id, campaign_name,
  leads_cur, spend_cur, cpl_cur, roas_cur,
  leads_prev, spend_prev, cpl_prev, roas_prev,
  leads_diff, leads_diff_pct,
  CASE
    WHEN spend_cur >= COALESCE(%(min_spend)s::numeric,0)
     AND (
       (%(target_roas)s IS NOT NULL AND roas_cur >= %(target_roas)s::numeric)
       OR (%(target_cpl)s IS NOT NULL AND cpl_cur IS NOT NULL AND cpl_cur <= %(target_cpl)s::numeric)
     )
     AND leads_cur >= COALESCE(%(min_leads)s,0)
     AND COALESCE(leads_diff,0) >= 0
    THEN 'scale'
    WHEN spend_cur >= COALESCE(%(min_spend)s::numeric,0)
     AND (
       (%(kill_roas)s IS NOT NULL AND (roas_cur IS NULL OR roas_cur < %(kill_roas)s::numeric))
       OR leads_cur = 0
     )
    THEN 'pause'
    ELSE 'watch'
  END AS action,
  CASE
    WHEN roas_cur IS NOT NULL AND %(target_roas)s IS NOT NULL
      THEN format('ROAS %.2f vs target %.2f', roas_cur, %(target_roas)s::numeric)
    WHEN cpl_cur IS NOT NULL AND %(target_cpl)s IS NOT NULL
      THEN format('CPL %.2f vs target %.2f', cpl_cur, %(target_cpl)s::numeric)
    WHEN leads_diff IS NOT NULL
      THEN format('Leads Δ = %+d (%.1f%%)', leads_diff, COALESCE(leads_diff_pct,0))
    ELSE 'No strong signal'
  END AS reason
FROM cmp
ORDER BY
  CASE action WHEN 'scale' THEN 1 WHEN 'watch' THEN 2 ELSE 3 END,
  roas_cur DESC NULLS LAST, leads_cur DESC
LIMIT COALESCE(%(limit)s,200);

UI (карточка «Budget Reco»):
	•	Табличка: Action • Campaign • Leads • Spend • CPL • ROAS • Reason.
	•	Цветные чипы действий (зел/жёлт/красн).
	•	Подсказка «почему»: краткая строка из reason.

⸻

12) Split Paid/Organic (по подтверждённой склейке)

Источник: dashboards.fact_leads
Поля: unified_platform, unified_campaign_name, is_paid, contract_amount (если есть), и др.

Важно: для spend используем v5_leads_campaign_daily. Для разреза Paid/Organic считаем кол-во лидов и, опционально, SUM(contract_amount) (если не дублируется), без spend.

Endpoint A (по платформам)

GET /v6/leads/paid-split/platforms
  ?date_from=...&date_to=...
  [&platforms=...]

SQL A

SELECT
  COALESCE(unified_platform,'unknown') AS platform,
  CASE WHEN is_paid IS TRUE THEN 'paid'
       WHEN is_paid IS FALSE THEN 'organic'
       ELSE 'unknown' END AS traffic_type,
  COUNT(*) AS leads
FROM dashboards.fact_leads fl
JOIN dashboards.crm_requests cr USING (id_source)
WHERE cr.source_date_time::date BETWEEN %(date_from)s::date AND %(date_to)s::date
  AND (%(platforms)s IS NULL OR unified_platform = ANY(%(platforms)s))
GROUP BY 1,2
ORDER BY 1,2;

Endpoint B (по кампаниям)

GET /v6/leads/paid-split/campaigns
  ?date_from=...&date_to=...
  [&platforms=...]
  [&limit=500]

SQL B

SELECT
  COALESCE(unified_platform,'unknown') AS platform,
  COALESCE(unified_campaign_name,'(без кампании)') AS campaign_name,
  CASE WHEN is_paid IS TRUE THEN 'paid'
       WHEN is_paid IS FALSE THEN 'organic'
       ELSE 'unknown' END AS traffic_type,
  COUNT(*) AS leads,
  SUM(contract_amount) AS revenue_contracts   -- при наличии/аккуратности
FROM dashboards.fact_leads fl
JOIN dashboards.crm_requests cr USING (id_source)
WHERE cr.source_date_time::date BETWEEN %(date_from)s::date AND %(date_to)s::date
  AND (%(platforms)s IS NULL OR unified_platform = ANY(%(platforms)s))
GROUP BY 1,2,3
ORDER BY leads DESC
LIMIT COALESCE(%(limit)s,500);

UI:
	•	Две плитки:
	•	By Platform — столбчатая диаграмма (Paid vs Organic vs Unknown) по платформам.
	•	By Campaign — таблица (топ N) с Platform • Campaign • Traffic Type • Leads • Revenue(contracts).
	•	Бейдж «unknown» показываем серым; подсказка «нужна дообогащение источников».

⸻

13) Аномалии кампаний (детектор всплесков)

Источник: dashboards.v5_campaign_anomalies (матвью).

Схема может различаться между инсталляциями; чтобы не ломать совместимость, возвращаем «как есть».

Endpoint

GET /v5/campaigns/anomalies
  ?date_from=...&date_to=...
  [&platforms=google,meta]
  [&limit=200]

SQL (safe):

SELECT *
FROM dashboards.v5_campaign_anomalies
WHERE dt BETWEEN %(date_from)s::date AND %(date_to)s::date
  AND (%(platforms)s IS NULL OR platform = ANY(%(platforms)s))
ORDER BY dt DESC
LIMIT COALESCE(%(limit)s,200);

UI (две опции отображения):
	•	Таблица: dt • platform • campaign • metric • actual • expected • Δ • z/score • severity (если поля есть; иначе показываем только доступные).
	•	Heatmap (опц.): по дням/кампаниям интенсивность «аномальности».
	•	Клик по строке → открывает тренд кампании за ±14 дней.

⸻

14) Примеры вызовов (Часть 2)

Campaigns PoP

/v5/campaigns/compare?date_from=2025-09-10&date_to=2025-10-03&platforms=google,meta&min_spend=0&order_by=leads_diff&limit=500

Top Movers

/v5/campaigns/top-movers?date_from=2025-09-10&date_to=2025-10-03&platforms=google,meta&min_spend=0&target_roas=3&kill_roas=0.8&min_leads=5&n=10

Efficiency Scatter

/v6/campaigns/scatter?date_from=2025-09-10&date_to=2025-10-03&platforms=google,meta&min_spend=0&target_cpl=300&min_leads=10

Budget Recommendations

/v6/reco/budget?date_from=2025-09-10&date_to=2025-10-03&platforms=google,meta&min_spend=0&target_roas=3&kill_roas=0.8&min_leads=5&limit=200

Paid Split (Platforms)

/v6/leads/paid-split/platforms?date_from=2025-09-10&date_to=2025-10-03&platforms=google,meta

Paid Split (Campaigns)

/v6/leads/paid-split/campaigns?date_from=2025-09-10&date_to=2025-10-03&platforms=google,meta&limit=500

Anomalies

/v5/campaigns/anomalies?date_from=2025-09-10&date_to=2025-10-03&platforms=google,meta&limit=200


⸻

15) UI — бенто-секции (Часть 2)
	7.	Top Movers — 3 карточки (Scale / Watch / Pause)
	•	Сводка по ключевым метрикам, «reason» под кампанией.
	•	Кнопки: «Открыть PoP», «Показать тренд».
	8.	Матрица эффективности (Scatter)
	•	Переключатель осей: X=CPL/ROAS, Y=Leads/Revenue.
	•	Пороговые линии (target_cpl, min_leads).
	•	Масштаб по Spend.
	9.	Campaigns PoP (таблица)
	•	Полнотекстовый поиск, сорты, пагинация.
	•	Колонки Cur/Prev/Δ/%Δ; бейджи тренда.
	10.	Paid vs Organic

	•	Барчарт по платформам; таблица По кампаниям.
	•	«Unknown» подсказка о необходимости улучшить атрибуцию.

	11.	Anomalies

	•	Таблица с иконкой «⚠︎».
	•	Клик → тренд кампании + окно подробностей аномалии.

⸻
ниже Часть 3/3 итогового ТЗ (v5) — «Дрилдауны, страницы Lead/Contract & Facebook Leads, Google-контракты (точный источник), справочники, финальная бенто-сетка, OpenAPI, перформанс/надёжность, фичефлаги, анти-грабли». Все примеры — только по подтверждённым данным/вью.

⸻

DataAnalytics — ТЗ v5 (Часть 3/3)

Валюта: UAH. Все суммы — numeric/decimal, форматирование на фронте.
Источники, подтверждённые к использованию:
	•	dashboards.v5_bi_platform_daily — KPI/тренды/доли.
	•	dashboards.v5_leads_campaign_daily — агрегаты кампаний по дням (Leads/Contracts/Revenue/Spend).
	•	dashboards.v5_leads_campaign_weekly — WoW (неделя-к-неделе).
	•	dashboards.v5_leads_source_daily_vw — UTM-источники (spend=0 по дизайну).
	•	dashboards.v5_campaign_anomalies — аномалии (safe SELECT *).
	•	dashboards.campaign_reference — реестр кампаний (human-name).
	•	dashboards.fact_leads — подтверждённая склейка CRM↔marketing (ID, UTM, gclid/fbclid, google/meta ids, contract_amount и т. д.).
	•	dashboards.v6_contracts_ads_detail_mv — best-touch сводка договоров по платформам (если включено в окружении).
	•	dashboards.v6_google_contracts_detail — точный источник договора для Google (сформировано из fact_leads + CRM).

Все деления защищать …/NULLIF(…,0) → NULL. UI показывает такие поля как «—».

⸻

16) Дрилдаун кампании (Campaign Detail)

Цель: после клика в таблице PoP (Часть 2, п. 8) дать маркетологу:
	•	ежедневные тренды по выбранной кампании,
	•	разрезы «лиды по Ad Group / Search Term (Google)» и «лиды по Ad Set (Meta)»,
	•	быстрые признаки эффективности (CPL/ROAS) в текущем окне.

16.1 Overview (daily)

Источник: dashboards.v5_leads_campaign_daily
Endpoint

GET /v6/campaigns/{platform}/{campaign_id}/overview
  ?date_from=...&date_to=...

SQL

SELECT
  dt,
  SUM(leads)         AS leads,
  SUM(n_contracts)   AS n_contracts,
  SUM(sum_contracts) AS revenue,
  SUM(spend)         AS spend,
  CASE WHEN SUM(leads)>0  THEN SUM(spend)::numeric/NULLIF(SUM(leads),0) END AS cpl,
  CASE WHEN SUM(spend)>0  THEN SUM(sum_contracts)::numeric/NULLIF(SUM(spend),0) END AS roas
FROM dashboards.v5_leads_campaign_daily
WHERE dt BETWEEN %(date_from)s::date AND %(date_to)s::date
  AND platform = %(platform)s
  AND campaign_id = %(campaign_id)s
GROUP BY dt
ORDER BY dt;

UI
	•	Левый график: Leads/day (линия).
	•	Правый график: Spend/day (линия).
	•	Под графиками: мини-KPI за период (Leads/Contracts/Revenue/Spend/CPL/ROAS).

16.2 Разрез по Ad Group (Google)

Источник: dashboards.fact_leads (+ датировка по crm_requests.source_date_time).

Spend по Ad Group в подтверждённых источниках отсутствует — показываем Leads и Revenue(contracts), без Spend.

Endpoint

GET /v6/campaigns/google/{campaign_id}/adgroups
  ?date_from=...&date_to=...
  [&search=...]  -- ILIKE по имени ad group
  [&limit=200]

SQL

SELECT
  COALESCE(google_ad_group_id,'(unknown)')   AS ad_group_id,
  COALESCE(google_ad_group_name,'(unknown)') AS ad_group_name,
  COUNT(*)                                   AS leads,
  SUM(contract_amount)                       AS revenue_contracts
FROM dashboards.fact_leads fl
JOIN dashboards.crm_requests cr USING (id_source)
WHERE cr.source_date_time::date BETWEEN %(date_from)s::date AND %(date_to)s::date
  AND fl.google_campaign_id = %(campaign_id)s
  AND (%(search)s IS NULL OR google_ad_group_name ILIKE ('%'||%(search)s||'%'))
GROUP BY 1,2
ORDER BY leads DESC
LIMIT COALESCE(%(limit)s,200);

UI: Таблица «Ad Groups» (Leads, Revenue(contracts)). Клик по строке → разрез Search Terms.

16.3 Search Terms / Keywords (Google)

Endpoint

GET /v6/campaigns/google/{campaign_id}/search-terms
  ?date_from=...&date_to=...
  [&q=...]     -- ILIKE по search_term|keyword_text
  [&limit=300]

SQL

SELECT
  COALESCE(NULLIF(google_search_term,''), '(no term)')  AS search_term,
  COALESCE(NULLIF(google_keyword_text,''), '(no kw)')   AS keyword_text,
  COUNT(*)                                              AS leads,
  SUM(contract_amount)                                  AS revenue_contracts
FROM dashboards.fact_leads fl
JOIN dashboards.crm_requests cr USING (id_source)
WHERE cr.source_date_time::date BETWEEN %(date_from)s::date AND %(date_to)s::date
  AND fl.google_campaign_id = %(campaign_id)s
  AND (%(q)s IS NULL OR
       google_search_term ILIKE ('%'||%(q)s||'%')
    OR google_keyword_text ILIKE ('%'||%(q)s||'%'))
GROUP BY 1,2
ORDER BY leads DESC
LIMIT COALESCE(%(limit)s,300);

UI: Таблица «Search Terms / Keywords». Значения (no term)/(no kw) — серые бейджи.

16.4 Разрез по Ad Set (Meta)

Endpoint

GET /v6/campaigns/meta/{campaign_id}/adsets
  ?date_from=...&date_to=...
  [&search=...]
  [&limit=200]

SQL

SELECT
  COALESCE(meta_adset_id,'(unknown)')   AS adset_id,
  COALESCE(meta_adset_name,'(unknown)') AS adset_name,
  COUNT(*)                              AS leads,
  SUM(contract_amount)                  AS revenue_contracts
FROM dashboards.fact_leads fl
JOIN dashboards.crm_requests cr USING (id_source)
WHERE cr.source_date_time::date BETWEEN %(date_from)s::date AND %(date_to)s::date
  AND fl.meta_campaign_id = %(campaign_id)s
  AND (%(search)s IS NULL OR meta_adset_name ILIKE ('%'||%(search)s||'%'))
GROUP BY 1,2
ORDER BY leads DESC
LIMIT COALESCE(%(limit)s,200);

UI: Таблица «Ad Sets» (Leads, Revenue(contracts)).

Spend/ROAS на этом уровне недоступны в подтверждённых источниках — не показываем.

⸻

17) Страница Facebook Leads (под маркетинговые действия)

Цель: рабочий список лидов из Meta с базовой атрибуцией (кампания/adset/ad, форма, fbclid/UTM).

Источник: dashboards.fact_leads (+ crm_requests для даты).

Endpoint (список лидов)

GET /v6/leads/meta
  ?date_from=...&date_to=...
  [&campaign_id=...|&adset_id=...|&form_id=...]
  [&q=...]        -- ILIKE по campaign/adset/ad/form_name
  [&limit=500]&[&offset=0]

SQL

SELECT
  fl.id_source,
  cr.source_date_time::timestamp AS lead_dt,
  fl.meta_campaign_id,  fl.meta_campaign_name,
  fl.meta_adset_id,     fl.meta_adset_name,
  fl.meta_ad_id,        fl.meta_ad_name,
  fl.meta_form_id,      fl.meta_form_name,
  fl.fb_lead_id,        fl.fbclid,
  fl.utm_source, fl.utm_medium, fl.utm_campaign, fl.utm_content, fl.utm_term,
  fl.contract_amount
FROM dashboards.fact_leads fl
JOIN dashboards.crm_requests cr USING (id_source)
WHERE cr.source_date_time::date BETWEEN %(date_from)s::date AND %(date_to)s::date
  AND fl.unified_platform = 'meta'
  AND (%(campaign_id)s IS NULL OR fl.meta_campaign_id = %(campaign_id)s)
  AND (%(adset_id)s    IS NULL OR fl.meta_adset_id    = %(adset_id)s)
  AND (%(form_id)s     IS NULL OR fl.meta_form_id     = %(form_id)s)
  AND (%(q)s IS NULL OR
       fl.meta_campaign_name ILIKE ('%'||%(q)s||'%')
    OR fl.meta_adset_name    ILIKE ('%'||%(q)s||'%')
    OR fl.meta_ad_name       ILIKE ('%'||%(q)s||'%')
    OR fl.meta_form_name     ILIKE ('%'||%(q)s||'%'))
ORDER BY lead_dt DESC
LIMIT COALESCE(%(limit)s,500) OFFSET COALESCE(%(offset)s,0);

UI
	•	Таблица: Дата • Campaign • Ad Set • Ad • Form • fbclid • UTM… • Contract (если есть).
	•	Фиксированный фильтропанель: период, кампания/adset, поиск, пагинация.
	•	Экспорт CSV (флаг lead_details_download_csv_enabled).

⸻

18) Договоры — сводка и детализация (Google)

18.1 Contracts Summary (best-touch)

Источник: dashboards.v6_contracts_ads_detail_mv (агрегат по platform_detected).
Endpoint

GET /v6/contracts/summary
  ?date_from=...&date_to=...
  [&platforms=google,meta,email]

SQL (safe-агрегат):

SELECT
  platform_detected AS platform,
  COUNT(*)          AS n_contracts,
  SUM(contract_amount) AS revenue
FROM dashboards.v6_contracts_ads_detail_mv
WHERE contract_dt BETWEEN %(date_from)s::date AND %(date_to)s::date
  AND (%(platforms)s IS NULL OR platform_detected = ANY(%(platforms)s))
GROUP BY 1
ORDER BY revenue DESC;

UI: Donut + таблица (platform • n_contracts • revenue). Клик по google → Детали Google.

18.2 Google Contracts Detail (точный источник)

Источник: dashboards.v6_google_contracts_detail (подтверждён).
Endpoint

GET /v6/contracts/google
  ?date_from=...&date_to=...
  [&campaign_id=...]
  [&q=...]            -- ILIKE по campaign/ad_group/keyword/search_term/gclid/id_source/contract_id
  [&min_amount=0]
  [&has_gclid=true|false]   -- опц.
  [&limit=500]&[&offset=0]

SQL

SELECT
  contract_dt, contract_id, contract_amount,
  id_source, internet_request_id,
  gclid,
  google_campaign_id, google_campaign_name,
  google_ad_group_id, google_ad_group_name,
  google_keyword_text, google_search_term,
  utm_source, utm_medium, utm_campaign, utm_content, utm_term
FROM dashboards.v6_google_contracts_detail
WHERE contract_dt BETWEEN %(date_from)s::date AND %(date_to)s::date
  AND (%(campaign_id)s IS NULL OR google_campaign_id = %(campaign_id)s)
  AND (%(min_amount)s IS NULL OR contract_amount >= %(min_amount)s::numeric)
  AND (%(has_gclid)s IS NULL OR
       (%(has_gclid)s::boolean AND gclid IS NOT NULL AND gclid <> '')
       OR (NOT %(has_gclid)s::boolean AND (gclid IS NULL OR gclid = '')))
  AND (%(q)s IS NULL OR (
       google_campaign_name ILIKE ('%'||%(q)s||'%')
    OR google_ad_group_name ILIKE ('%'||%(q)s||'%')
    OR google_keyword_text  ILIKE ('%'||%(q)s||'%')
    OR google_search_term   ILIKE ('%'||%(q)s||'%')
    OR gclid                ILIKE ('%'||%(q)s||'%')
    OR id_source            ILIKE ('%'||%(q)s||'%')
    OR contract_id::text    ILIKE ('%'||%(q)s||'%')
  ))
ORDER BY contract_dt DESC, contract_amount DESC
LIMIT COALESCE(%(limit)s,500) OFFSET COALESCE(%(offset)s,0);

UI
	•	Таблица «Google Contracts»: Date • Amount • Campaign • Ad Group • Keyword • Search Term • gclid • id_source • UTM.
	•	Быстрые фильтры: «Only with gclid», «Min amount», строка поиска.
	•	Клик по строке → модал «Contract details» (вся строка + кнопка «показать лид» → переход в Lead Details).

Meta-контракты: не выводим до подтверждения соответствующего view. Фича-флаг: meta_contracts_enabled=false — компонент скрыт.

⸻

19) Lead / Contract Details (единая карточка)

Цель: для любого id_source показать связку: Lead (CRM) + Marketing (Google/Meta/UTM) + Contract (если есть).

Endpoint

GET /v6/lead/{id_source}

SQL (safe join)

WITH dc AS (
  SELECT DISTINCT ON (dc.id_source)
    dc.id_source::text AS id_source,
    dc.contract_id::bigint AS contract_id,
    COALESCE(dc.total_cost_of_the_contract, dc.sum2)::numeric AS contract_amount,
    COALESCE(dc.updated_at, dc.created_at)::date AS contract_dt
  FROM raw.itcrm_docs_clients dc
  WHERE dc.id_source IS NOT NULL
  ORDER BY dc.id_source, COALESCE(dc.updated_at, dc.created_at) DESC NULLS LAST
)
SELECT
  cr.id_source,
  cr.source_date_time       AS lead_dt,
  cr.manager_id, cr.manager_login,
  cr.request_type, cr.form_name,
  fl.unified_platform, fl.unified_campaign_name,
  -- Google/Meta атрибуты
  fl.gclid, fl.google_campaign_id, fl.google_campaign_name,
  fl.google_ad_group_id, fl.google_ad_group_name,
  fl.google_keyword_text, fl.google_search_term,
  fl.fb_lead_id, fl.fbclid,
  fl.meta_campaign_id, fl.meta_campaign_name,
  fl.meta_adset_id, fl.meta_adset_name,
  fl.meta_ad_id, fl.meta_ad_name,
  fl.meta_form_id, fl.meta_form_name,
  -- UTM
  fl.utm_source, fl.utm_medium, fl.utm_campaign, fl.utm_content, fl.utm_term,
  -- Contract
  dc.contract_id, dc.contract_amount, dc.contract_dt
FROM dashboards.crm_requests cr
LEFT JOIN dashboards.fact_leads fl ON fl.id_source = cr.id_source
LEFT JOIN dc ON dc.id_source = cr.id_source
WHERE cr.id_source = %(id_source)s::text;

UI (карточка)
	•	Левая колонка «Lead»: дата, менеджер, тип/форма запроса, id_source.
	•	Средняя «Marketing»: платформа, кампания (human-name), gclid/fbclid, ad group/ad set, keyword/search term, UTM-набор (копируемые).
	•	Правая «Contract»: contract_id, amount, date (если есть).
	•	Действия: «Скопировать UTM», «Открыть Google Contracts с фильтром gclid/кампании», «Экспорт JSON».

⸻

20) Справочники (Directories)

Платформы

SELECT DISTINCT platform FROM dashboards.v5_bi_platform_daily ORDER BY platform;

Кампании

SELECT DISTINCT platform, campaign_id, campaign_name
FROM dashboards.v5_leads_campaign_daily
ORDER BY platform, campaign_name;

UTM-источники

SELECT DISTINCT platform, utm_source
FROM dashboards.v5_leads_source_daily_vw
ORDER BY platform, utm_source;


⸻

21) Финальная бенто-сетка (страницы и блоки)

21.1 Страница DataAnalytics
	1.	Sticky Filters: период, платформы (google/meta/email по умолчанию), min_spend, compare_mode (auto/custom/disabled).
	2.	KPI Compare (6 × 2 строки) — текущее и Δ/Δ%.
	3.	Тренды Compare — Leads/день, Spend/день (оверлей прошлого периода).
	4.	Share по платформам — donut + таблица с Δ п.п.
	5.	Campaigns PoP (таблица) — поиск, сорты, пагинация.
	6.	Матрица эффективности (Scatter) — пороги target_cpl, min_leads.
	7.	Top Movers / Budget Reco — три колонки (Scale/Watch/Pause).
	8.	WoW кампаний — готовый view (сорт по leads_diff).
	9.	UTM-источники — таблица (spend=0).
	10.	Contracts Summary (best-touch) — donut + линк «Подробнее» → LeadContracts.

21.2 Страница Campaign Detail
	•	Header: Platform • Campaign Name (ID) + диапазон.
	•	Блоки: Overview (daily), AdGroups/AdSets, Search Terms (для Google), быстрые KPI.
	•	Линки: «Открыть Google Contracts с campaign_id», «Показать лиды (Google/Meta)».

21.3 Страница LeadContracts
	•	Фильтры: период, platform (для сводки), campaign_id (для деталей Google), q, min_amount, has_gclid.
	•	Блок A: Contracts Summary (best-touch) — donut + таблица.
	•	Блок B: Google Contracts Detail — таблица (поддержка пагинации/поиска).
	•	Блок C: Meta-contracts (плейсхолдер) — скрыт, пока meta_contracts_enabled=false.

21.4 Страница Facebook Leads
	•	Фильтры: период, campaign_id, adset_id, form_id, q, пагинация.
	•	Таблица: список лидов (см. п. 17).
	•	Экспорт CSV (если флаг включён).

⸻

22) OpenAPI (контуры, финальный список)

GET /v5/kpi/compare
GET /v5/trend/leads/compare
GET /v5/trend/spend/compare
GET /v5/share/platforms/compare

GET /v5/campaigns/compare
GET /v5/campaigns/top-movers
GET /v5/campaigns/wow
GET /v5/campaigns/anomalies

GET /v6/campaigns/{platform}/{campaign_id}/overview
GET /v6/campaigns/google/{campaign_id}/adgroups
GET /v6/campaigns/google/{campaign_id}/search-terms
GET /v6/campaigns/meta/{campaign_id}/adsets
GET /v6/campaigns/scatter

GET /v6/utm-sources                -- alias старого /v5/utm-sources при необходимости
GET /v6/leads/paid-split/platforms
GET /v6/leads/paid-split/campaigns

GET /v6/leads/google               -- (опц., по аналогии с meta; если потребуется)
GET /v6/leads/meta

GET /v6/contracts/summary
GET /v6/contracts/google

GET /v6/lead/{id_source}

GET /v6/reco/budget

Все GET принимают platforms как CSV → бек парсит в text[]. Пагинация: limit/offset (дефолт limit=200/500 по месту).

⸻

23) Перформанс, индексы, кэш

Индексы (рекомендации):
	•	v5_bi_platform_daily (dt, platform).
	•	v5_leads_campaign_daily (dt, platform, campaign_id) INCLUDE (leads, n_contracts, sum_contracts, spend).
	•	v5_leads_campaign_weekly (platform, leads_diff DESC) — композит под сортировку опционально.
	•	v5_leads_source_daily_vw (dt, platform, utm_source).
	•	fact_leads:
	•	PK (id_source),
	•	BTree: (google_campaign_id), (meta_campaign_id), (gclid), (fb_lead_id), (fbclid),
	•	BTree: (unified_platform), (unified_campaign_name),
	•	(поисковые) pg_trgm на google_*_name, meta_*_name, unified_campaign_name (ILIKE).
	•	v6_google_contracts_detail:
	•	(contract_dt), (google_campaign_id), GIN pg_trgm на google_campaign_name, google_ad_group_name, google_keyword_text, google_search_term, плюс (gclid).

Кэширование:
	•	KPI/Share/Trends/PoP/Scatter/Reco — TTL 1–5 мин, ключ = hash(parameters).
	•	Контракты деталь — TTL 1–2 мин (или без кэша при активной работе с фильтрами).

Обновление MV:
	•	REFRESH ... CONCURRENTLY по расписанию (ежечасно), см. ваш n8n-воркфлоу.
	•	При критических отчётах можно делать on-demand refresh с rate-limit.

⸻

24) Безопасность и PII
	•	Не выводим персональные поля клиента (телефон/email) — не используется в подтверждённых представлениях.
	•	id_source, contract_id — технические идентификаторы, показываем без маски.
	•	Экспорт CSV — только для маркетинговых атрибутов (UTM, ids, названия, даты, суммы договоров).

⸻

25) Фиче-флаги
	•	meta_contracts_enabled (default: false) — прячет блок «Meta-contracts».
	•	lead_details_download_csv_enabled (default: true).
	•	anomalies_heatmap_enabled (default: false).
	•	facebook_leads_page_enabled (default: true).

⸻

26) Анти-грабли (жёсткие правила)
	1.	Никаких джойнов на b.id_source и любые недостоверные поля — используем только подтверждённые вью/таблицы из списка в начале.
	2.	Деление на ноль → NULL, UI рендерит «—».
	3.	В compare-режиме:
	•	auto: прошлый период = та же длина, сразу до текущего.
	•	custom: ровно prev_from/prev_to (валидируйте: длина может отличаться).
	4.	UTM с ":"/"(unknown)" → нормализуем в «—» на UI.
	5.	Spend по AdGroup/AdSet мы не показываем, пока нет подтверждённого источника костов на этом уровне.

⸻

27) QA-чек-лист
	•	Срез KPI Compare: сумма cur ровно = сумме в v5_bi_platform_daily за период/платформы.
	•	Тренды: календарь полный (zero-fill), прошлый период корректно сдвинут.
	•	Таблица PoP: выборка с min_spend=0 содержит кампанию Google 20317544053 (пример из ваших проверок) с корректным leads_cur/spend_cur.
	•	Contracts Google: фильтр campaign_id + has_gclid=true возвращает только строки с непустым gclid.
	•	Facebook Leads: дата лида = crm_requests.source_date_time.

⸻

28) UX-детали и индикаторы
	•	Δ-поля: формат +12 / −3 + процент в скобках, цвет (зел/красн), 0 — серый.
	•	CPL: чем ниже, тем лучше — используем обратную цветовую шкалу.
	•	ROAS: бейджи > target — зелёный; < kill — красный.
	•	В таблицах показываем подсказку-tooltip, как вычислено поле (например, «ROAS = Revenue/Spend»).
	•	По клику на кампанию — breadcrumb навигация (назад в PoP).

⸻

29) Примеры вызовов (Часть 3)

Campaign Overview

/v6/campaigns/google/20317544053/overview?date_from=2025-09-10&date_to=2025-10-03

Google AdGroups

/v6/campaigns/google/20317544053/adgroups?date_from=2025-09-10&date_to=2025-10-03&search=Performance&limit=200

Google Search Terms

/v6/campaigns/google/20317544053/search-terms?date_from=2025-09-10&date_to=2025-10-03&q=python

Meta AdSets

/v6/campaigns/meta/120233029480630479/adsets?date_from=2025-09-10&date_to=2025-10-03

Facebook Leads

/v6/leads/meta?date_from=2025-09-10&date_to=2025-10-03&campaign_id=120233029480630479&limit=200

Contracts Summary

/v6/contracts/summary?date_from=2025-09-10&date_to=2025-10-03&platforms=google,meta,email

Google Contracts Detail

/v6/contracts/google?date_from=2025-09-10&date_to=2025-10-03&campaign_id=20317544053&has_gclid=true&min_amount=1000&q=roblox&limit=200

Lead Card

/v6/lead/4171124


⸻




