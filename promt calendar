Planerix Calendar OKR/KPI 

Цель: создать многопользовательский календарь с глубокой интеграцией OKR/KPI, многоуровневой оргструктурой, кросс‑департаментными командами, счётчиками задач и агентами (рекомендации, автозадачи, регулярные обзоры).Стек: React (Next.js) + FastAPI (Python) + PostgreSQL + n8n + Redis + WebSockets/SSE + Telegram/Email интеграции.Мульти‑тенантность: поддержка нескольких организаций (org_id) с изоляцией данных.

Роли и доступы (RBAC)

Org Admin / Owner — управление организацией, юнитами, ролями, интеграциями.

BU Manager — цели и ресурсы бизнес‑юнита; доступ к его календарям/проектам.

Head of Department (HoD) — департамент, OKR/KPI департамента, команды.

Team Lead (TL) — команда/сквад, спринты, распределение фокуса.

Individual Contributor (IC) — личные задачи, календарь, цели.

PMO/HR/Finance (scoped) — отчёты и аудит в пределах скоупа.

Guest/Partner — доступ к проектам/встречам по приглашению (read‑mostly).

Тех. требования: RLS по org_id, гранулярные скоупы (Org/BU/Dept/Team/Project/User), токены с ограниченными scope‑claim.

Основные сущности и связи

Оргструктура: Organization → BusinessUnit → Department → Team; Squad (CrossTeam) — M:N между пользователями/командами из разных департаментов.

Календарь/События: Calendar, CalendarEvent (RRULE/EXDATE/All‑day, тип: meeting/focus/ritual/other), участники, временные зоны, рабочие часы и праздники.

Проекты и Задачи: Project, Task (статусы, приоритеты, due_at, SLA, owner/assignee, чеклисты, файлы‑линки).

OKR: Objective → KeyResult (цикл, прогресс, confidence, владелец).

KPI: Indicator (цель, пороги, формула/источник) → Measurement (время, значение).

Привязки (Linking): Event/Task/Project ↔ OKR/KR/KPI (многие‑ко‑многим).

Агенты: Agent, AgentPolicy, AgentRun, AgentRecommendation.

Метрик‑биндинги: MetricBinding (внешний источник → KPI/KR).

Событийная шина: OutboxEvent (KPI_BREACH, TASK_OVERDUE и т.п.).

Счётчики: матвью и инкрементальные агрегаты по задачам/времени/прогрессу.

Пользовательские сценарии (ключевые)

Квартальные OKR: каскад целей, KR, привязка KR к задачам/событиям; визуализация OKR overlay.

Импорт KPI: n8n тянет данные из вью/таблиц/API, создаёт измерения; система выявляет отклонения и запускает агента.

План недели: авто‑расклад фокус‑слотов под KR при ограничениях (рабочие часы, встречи, SLA).

Кросс‑сквады: сбор на спринт; общие календарные ритуалы; счётчики по throughput/WIP/overdue.

Ежедневный контроль: TL/HoD видят выполнение, отклонения KPI/OKR, рекомендации агентов.

Ретро: автоматический отчёт по KR/KPI, вклад людей/команд, узкие места, план улучшений.

 Функциональные требования

6.1 Календарь

Просмотры: День/Неделя/Месяц/Timeline; быстрый драг‑энд‑дроп.

Повторения: iCal RRULE; исключения EXDATE; серия‑/экземпляр‑уровень изменений.

Участники/приглашения: RSVP, владельцы и гости; доступ к описанию/линкам.

Фокус‑слоты: тип события focus; защита от автопереноса без подтверждения.

Часовые пояса, рабочие часы, локальные праздники (на уровне BU/Dept).

Конфликты: подсветка наложений, авто‑предложения свободных слотов.

6.2 Задачи/Проекты

CRUD, статусы: todo/in_progress/blocked/done/canceled; приоритеты; чеклисты; вложения (линками).

SLA: правила по типам задач/проектов; сигнализация при рисках.

Массовые операции: перенос дедлайнов, смена приоритета, назначение.

6.3 OKR

Циклы (например, 2025‑Q4), каскадирование Company→Personal.

Прогресс KR (0..100%), confidence 0..10, журнал апдейтов.

Валидация выравнивания: KR должен быть связан минимум с 1 задачей/слотом за цикл.

6.4 KPI и Метрики

Индикатор: цель, пороги RAG, единицы измерения, источник.

Измерения: ingest через API/n8n; дедупликация по (indicator_id, measured_at).

Тренды: временные ряды, агрегации (sum/avg/last), сравнение с целью.

6.5 Привязки Event/Task/Project ↔ KR/KPI

Множественные привязки; взвешивание времени/вклада (опционально, V1).

Автоматическое предложение привязок по шаблонам/тегам.

6.6 Счётчики и отчёты

Created/Planned/In‑Progress/Done/Blocked за период.

Overdue, SLA‑compliance, Throughput, Lead Time (p50/p90), WIP.

Focus‑time ratio; KR Time Allocation; KPI Deviation.

Разрезы: Org/BU/Dept/Team/Squad/Project/User/KR/KPI + период.

Поиск/Фильтры

Быстрый поиск по событиям/задачам/OKR/KPI; сохранённые фильтры и представления.

CSV/ICS импорт/экспорт; 

7. Нефункциональные требования

Производительность: P95 < 200 мс на CRUD; выборки календарей на неделю до 5k событий — < 500 мс; счётчики — из матвью < 300 мс.

Надёжность: ретраи вебхуков; идемпотентность инжеста; гарантия доставки событий (outbox + обработчик n8n).

Безопасность: JWT/OAuth2, SSO (Google/MS); RLS по org_id; аудит‑лог изменений критичных сущностей; шифрование в транзите (TLS) и at‑rest (KMS/диск).

Масштабирование: горизонтальное для API (stateless), БД — реплики для чтения, Redis для очередей/кэша.

OBS: трассировка (OpenTelemetry), метрики (Prometheus), алерты (SLA breach, Retry spikes).

Архитектура

Frontend: Next.js (React), Tailwind + shadcn/ui, Zustand/Redux для стейта, WebSocket/SSE для realtime.

Backend: FastAPI; SQLAlchemy + Alembic; Celery/RQ воркеры; Outbox‑паттерн; Webhook‑слушатели; OpenAPI.

Storage: PostgreSQL (OLTP, схема app), Redis (кэш/очереди), S3‑совместимое хранилище для вложений (опционально).

Интеграции: n8n как ETL/оркестратор; коннекторы к внешним БД/API.

9. Модель данных (ядро, упрощённо)

org, business_unit, department, team, squad, user, membership.

calendar, calendar_event(id, org_id, calendar_id, starts_at, ends_at, title, event_type, rrule, exdates[], all_day, created_by, ...).

project, task(id, org_id, project_id, assignee_id, status, priority, due_at, started_at, done_at, ...).

okr_objective, okr_key_result(id, org_id, objective_id, owner_id, cycle, progress_pct, confidence, ...).

kpi_indicator(id, org_id, name, unit, target_value, warn_threshold, alarm_threshold, source); kpi_measurement(id, org_id, indicator_id, measured_at, value).

event_link(id, org_id, event_id?, task_id?, project_id?, okr_kr_id?, kpi_id?).

agent, agent_policy(scope, condition jsonb, action jsonb, schedule_rrule), agent_run, agent_recommendation.

metric_binding(bound_type, bound_id, source_kind, connection_name, sql_text, value_column, ts_column, aggregation, unit).

Матвью: mv_task_counters(org_id, d, done_cnt, wip_cnt, overdue_cnt, lead_time_p50) и др.

Индексы (ключевые):

calendar_event(org_id, calendar_id, starts_at, ends_at), опционально tstzrange + GIST.

task(org_id, status, due_at), task(org_id, assignee_id, status).

kpi_measurement(org_id, indicator_id, measured_at).

event_link(org_id, kpi_id) where task_id is not null.

outbox_event(org_id, event_type, created_at) where processed_at is null.

10. API (основные контуры)

Аутентификация: Bearer JWT; заголовок X-Org-Id или org в токене.

10.1 Calendar

POST /calendar/events — создать событие (+привязки okr/kpi/task); RRULE/EXDATE поддерживаются.

GET /calendar/events?from=&to=&calendar_id= — диапазон.

PATCH /calendar/events/{id} — частичное обновление (включая экземпляр серии).

DELETE /calendar/events/{id} — с политикой серии/экземпляра.

10.2 Tasks & Projects

POST /tasks, GET /tasks, PATCH /tasks/{id}, POST /tasks/bulk.

10.3 OKR / KPI

POST /okrs/objectives, POST /okrs/key-results, PATCH /okrs/key-results/{id}.

POST /kpi/indicators, POST /kpi/measurements (ingest из n8n), GET /kpi/indicators/{id}/series?from=&to=.

10.4 Linking & Counters

POST /links (универсальная привязка), DELETE /links/{id}.

GET /counters/daily?since=&until=&scope=&scope_id= — агрегаты из матвью.

10.5 Agents & Events

GET /events/outbox?limit=; POST /events/{id}/ack.

POST /agents/policies (создание/включение/выключение), GET /agents/policies.

POST /agents/runs/execute (по policy_id, event_id?); GET /agents/recommendations.