#!/bin/bash
set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ Planerix –≤ dev —Ä–µ–∂–∏–º–µ..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–±–∏–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç–∞—Ö
kill_ports() {
    local ports=("3000" "3001" "3002" "8001" "5432" "6379")
    echo -e "${YELLOW}üßπ –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç—ã: ${ports[*]}${NC}"

    for port in "${ports[@]}"; do
        if lsof -ti:$port >/dev/null 2>&1; then
            echo "  –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É $port..."
            lsof -ti:$port | xargs kill -9 2>/dev/null || true
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤
check_ports() {
    local required_ports=("3002" "8001")
    for port in "${required_ports[@]}"; do
        if lsof -ti:$port >/dev/null 2>&1; then
            echo -e "${RED}‚ùå –ü–æ—Ä—Ç $port –∑–∞–Ω—è—Ç!${NC}"
            return 1
        fi
    done
    return 0
}

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo -e "${BLUE}üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}"
docker-compose -f docker-compose.dev.yml down 2>/dev/null || true

# –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç–∞—Ö
kill_ports

# –ñ–¥–µ–º –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–æ—Ä—Ç–æ–≤
sleep 2

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã –µ—â–µ —Ä–∞–∑
if ! check_ports; then
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –ø–æ—Ä—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ –í—Å–µ –ø–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã${NC}"

# –ó–∞–ø—É—Å–∫–∞–µ–º –Ω—É–∂–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã...${NC}"
docker-compose -f docker-compose.dev.yml up -d postgres redis backend frontend

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "${YELLOW}‚è≥ –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:${NC}"
docker-compose -f docker-compose.dev.yml ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å...${NC}"

backend_status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8001/api/health || echo "000")
frontend_status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3002/ || echo "000")

if [ "$backend_status" = "200" ]; then
    echo -e "  Backend (8001): ${GREEN}‚úÖ OK${NC}"
else
    echo -e "  Backend (8001): ${RED}‚ùå FAIL (status: $backend_status)${NC}"
fi

if [ "$frontend_status" = "200" ]; then
    echo -e "  Frontend (3002): ${GREEN}‚úÖ OK${NC}"
else
    echo -e "  Frontend (3002): ${RED}‚ùå FAIL (status: $frontend_status)${NC}"
fi

echo -e "\n${GREEN}üéâ –ì–æ—Ç–æ–≤–æ!${NC}"
echo -e "Frontend: ${BLUE}http://localhost:3002${NC}"
echo -e "Backend API: ${BLUE}http://localhost:8001/api${NC}"
echo -e "–¢–µ—Å—Ç–æ–≤—ã–π –ª–æ–≥–∏–Ω: ${YELLOW}itstep@itstep.com${NC} / ${YELLOW}ITstep2025!${NC}"

echo -e "\n${YELLOW}–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:${NC} docker-compose -f docker-compose.dev.yml down"